[SERVICE]
    Flush        5
    Daemon       Off
    Log_Level    info
    # ✅ BEST PRACTICE: Enable the monitoring endpoint for health checks.
    HTTP_Server  On
    HTTP_Listen  0.0.0.0
    HTTP_Port    2020
    Parsers_File parsers.conf

[INPUT]
    Name              tail
    Path              /var/lib/docker/containers/*/*-json.log
    Tag               docker.*
    Refresh_Interval  5
    Mem_Buf_Limit     64MB
    Skip_Long_Lines   On
    # ✅ FIX: Start reading from the TAIL of existing log files, not the HEAD.
    # When the log-cleaner removes the DB file, this prevents Fluent Bit
    # from re-processing the entire log history of existing containers on startup.
    Read_from_Head    Off
    # Use a database to remember the position in the log files.
    # This prevents re-reading the same logs if Fluent Bit restarts.
    DB                /logs/fluent-bit.db
    DB.Sync           Normal
    Docker_Mode       On

# ✅ FIX: Add the JSON parser filter to un-nest the "log-in-log" format.
# This is the critical step that makes the log content accessible to the grep filter,
# preventing a startup crash from an unhandled log format.
[FILTER]
    Name         parser
    Match        docker.*
    Key_Name     log
    Parser       docker_log_parser
    Reserve_Data On

[FILTER]
    Name           grep
    Match          docker.*
    # ✅ FIX: Exclude logs from the ollama and analyzer containers themselves.
    # This prevents the system from analyzing its own operational logs, which is
    # inefficient and was causing a feedback loop.
    Exclude        container_name ollama
    Exclude        container_name analyzer
    Exclude        container_name /analyzer
    Exclude        name analyzer
    Exclude        name /analyzer
    Exclude        image analyzer

[FILTER]
    Name          rewrite_tag
    Match         docker.*
    Rule          log (?i)(ERROR|CRIT|WARN|FAIL|FATAL) docker.filtered true
    Emitter_Name  re_emitter

# --- OUTPUT 1: Archival to a file ---
# This block writes every log message to a persistent file.
# The `Match *` ensures it gets all logs, including the originals.
[OUTPUT]
    Name   file
    Match  *
    Path   /logs
    File   all.log
    Format plain

[OUTPUT]
    Name   file
    Match  docker.filtered
    Path   /logs
    File   filtered.log
    Format plain

# --- OUTPUT 2: Real-time analysis via HTTP ---
# This block sends a copy of every log message to your analyzer service.
[OUTPUT]
    Name          http
    # ✅ FIX: Send only the re-tagged (filtered) logs to the analyzer.
    # This is the primary filtering mechanism to reduce load on the analyzer service.
    Match         docker.filtered
    # The hostname 'analyzer' is resolved by Docker's internal DNS
    Host          analyzer
    Port          9880
    URI           /logs
    # Send each log record as a separate JSON object
    Format        json
    # Retry if the analyzer is temporarily unavailable
    Retry_Limit   5

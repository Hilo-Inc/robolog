# C:/dev/robolog/docker-compose.yml

# âœ¨ 1. Define a custom network for your application stack
networks:
  robolog-net:
    driver: bridge

volumes:
  logs:           # central log files collected by Fluent Bit
  ollama:         # model cache for Ollama

services:
  # ðŸ‘‰ This is a one-shot container that runs on startup to clear old logs.
  # This ensures every `docker compose up` starts with a fresh slate.
  log-cleaner:
    image: busybox
    container_name: log-cleaner
    volumes:
      - logs:/logs
    # This command removes archived log files and Fluent Bit's position database.
    # âœ… FIX: Added filtered.log to the list of files to remove for a complete cleanup.
    command: sh -c "echo 'Clearing persistent logs...' && rm -f /logs/all.log /logs/filtered.log /logs/fluent-bit.db"

  # ðŸ‘‰ Main application with Nginx, Node, PM2
  app:
    build: ./app
    container_name: app
    restart: unless-stopped
    depends_on:
      # Simplified dependency for debugging. We will restore health checks later.
      - analyzer
    ports:
      - "80:80"   # For the HTTP -> HTTPS redirect
      - "443:443" # For the main HTTPS site
    environment:
      # âœ… BEST PRACTICE: Make frontend configuration portable via environment variables.
      # The WebSocket now connects to the analyzer's primary port.
      - NEXT_PUBLIC_ANALYZER_WS_URL=ws://localhost:9880
    networks: # âœ¨ 2. Add the service to your custom network
      - robolog-net

  # ðŸ‘‰ Ollama serving Gemma 3n (e2b)
  ollama:
    image: ollama/ollama
    container_name: ollama
    restart: unless-stopped
    deploy:
      resources:
        limits:
          # âœ… BEST PRACTICE: Set explicit resource limits for memory-intensive services.
          # This prevents a single container from consuming all host resources.
          cpus: '4.0'
          memory: '8G'
    volumes:
      - ollama:/root/.ollama
    command: ["serve"]
    ports:
      - "11434:11434"
    networks: # âœ¨ 2. Add the service to your custom network
      - robolog-net

  # ðŸ‘‰ Fluent Bit â€“ centralise all container logs into /logs/all.log
  fluent-bit:
    image: fluent/fluent-bit:3.0
    container_name: fluent-bit
    depends_on:
      # Simplified dependency for debugging.
      - log-cleaner
    volumes:
      - logs:/logs
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - ./fluent-bit/parsers.conf:/fluent-bit/etc/parsers.conf:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    ports:
      - "24224:24224"
    restart: unless-stopped
    networks: # âœ¨ 2. Add the service to your custom network
      - robolog-net

  # ðŸ‘‰ Log Analyzer â€“ Node script that calls Gemma & posts to Discord
  analyzer:
    build: ./analyzer
    container_name: analyzer
    depends_on:
      # Simplified dependency for debugging.
      - log-cleaner
      - ollama
      - fluent-bit
    # âœ… BEST PRACTICE: Mount the host filesystem to get real disk usage data.
    # This makes the diskReport() function in the analyzer much more useful.
    volumes:
      - /:/host:ro
      - logs:/logs # This line was part of a duplicate key and has been merged.
    restart: unless-stopped
    ports: # âœ… Expose the single port used for both the API and WebSocket server.
      - "9880:9880"
    environment:
      - OLLAMA_URL=http://ollama:11434
      - MODEL_NAME=gemma3n:e2b
      - LANGUAGE=English
      # The analyzer now uses a single, clear variable for the optional initial webhook.
      - WEBHOOK_URL=${WEBHOOK_URL}
      - WEBHOOK_PLATFORM=discord
    networks: # âœ¨ 2. Add the service to your custom network
      - robolog-net
